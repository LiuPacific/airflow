cwlVersion: v1.2
class: CommandLineTool

hints:
  DockerRequirement:
    dockerPull: typingliu/visualizing_geojson_for_basemap:latest
  NetworkAccess:
    networkAccess: true


inputs:
  source_geojson_file_path:
    type: File
    inputBinding:
      position: 1
  column_name_to_show:
    type: string
    default: "Ai"
    inputBinding:
      position: 2
  output_png_file_name:
    type: string
    default: "default.png"
    inputBinding:
      position: 4
  output_boundingbox_file_name:
    type: string
    default: "boundingbox_default.json"
    inputBinding:
      position: 5

stdout: output.txt
outputs:
  png_output:
    type: File
    outputBinding:
      glob: "*.png"
      outputEval: ${self[0].basename=inputs.output_png_file_name; return self;}
  boundingbox_output:
    type: File
    outputBinding:
      glob: "boundingbox.json"
      outputEval: ${self[0].basename=inputs.output_boundingbox_file_name; return self;}

  lon_left:
    type: float
    outputBinding:
      loadContents: True
      glob: "output.txt"
      outputEval: $(parseFloat(self[0].contents.match(/lon_left=([0-9.e+-]+)/)[1]))
  lat_bottom:
    type: float
    outputBinding:
      loadContents: True
      glob: "output.txt"
      outputEval: $(parseFloat(self[0].contents.match(/lat_bottom=([0-9.e+-]+)/)[1]))
  lon_right:
    type: float
    outputBinding:
      loadContents: True
      glob: "output.txt"
      outputEval: $(parseFloat(self[0].contents.match(/lon_right=([0-9.e+-]+)/)[1]))
  lat_top:
    type: float
    outputBinding:
      loadContents: True
      glob: "output.txt"
      outputEval: $(parseFloat(self[0].contents.match(/lat_top=([0-9.e+-]+)/)[1]))
requirements:
  InlineJavascriptRequirement: {}
